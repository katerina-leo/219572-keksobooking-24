//Задание 1.

//    Функция, возвращающая случайное целое число из переданного диапазона включительно. Пример использования функции:

// имя_функции(от, до); // Результат: целое число из диапазона "от...до"

// Учтите, что диапазон может быть только положительный, включая ноль. А также придумайте, как функция должна вести себя, если передать значение «до» меньшее, чем значение «от», или равное ему.

// При решении пользовалась https://developer.mozilla.org/ru/docs/Web/JavaScript/Reference/Global_Objects/Math/random

function getRandomIntInclusive(min, max) {
  min = Math.ceil(min);
  max = Math.floor(max);
  if (min < 0 ||  min >= max) {
    return('Задан неверный диапазон');
  }
  return Math.floor(Math.random() * (max - min + 1)) + min; //Максимум и минимум включаются
}
getRandomIntInclusive(1, 5);


//Задание 2.

//   Функция, возвращающая случайное число с плавающей точкой из переданного диапазона включительно. Будет использоваться для генерации временных географических координат в следующем задании. Пример использования функции:

//имя_функции(от, до, количество_знаков_после_запятой); // Результат: число с плавающей точкой из диапазона "от...до" с указанным "количеством знаков после запятой"

//Учтите, что диапазон может быть только положительный, включая ноль. А также придумайте, как функция должна вести себя, если передать значение «до» меньшее, чем значение «от», или равное ему. Не забудьте, что в случае с дробными числами диапазон может быть в десятых, сотых, тысячных и т. д. долях. Например, 1.1, 1.2 — корректный диапазон.

// При решении пользовалась https://qna.habr.com/q/999157

function getRandomArbitrary(min, max, digits) {
  if (min >= max || min < 0) {
    return ('Задан неверный диапазон! Укажите другие числа.');
  }
  return(Math.random() * (max - min) + min).toFixed(digits);
}
getRandomArbitrary(2, 5, 4);


//Задание 3

//    Функция для проверки максимальной длины строки. Будет использоваться для проверки длины введённого комментария, но должна быть универсальна. Пример использования функции:

// имя_функции(проверяемая_строка, максимальная_длина); // Результат: true, если строка проходит по длине, и false — если не проходит

const checkMaxLengthString = function(string, maxLenght) {
  if(string.length <= maxLenght) {
    return true;
  }
  return false;
};
checkMaxLengthString('fdhfgjdf', 6);
